//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use palform_tsid::{resources::IDOrganisation, tsid::PalformDatabaseID};
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "organisation_feature_entitlement")]
pub struct Model {
    pub user_count: Option<i32>,
    pub response_count: Option<i32>,
    pub question_per_form_count: Option<i32>,
    pub form_count: Option<i32>,
    pub team_count: Option<i32>,
    pub export: bool,
    pub import_keys: bool,
    pub branding_count: Option<i32>,
    pub subdomain: bool,
    pub crypto_details: bool,
    pub audit: bool,
    pub priority_support: bool,
    pub oidc: bool,
    pub submission_auto_delete: bool,
    pub form_captcha: bool,
    #[sea_orm(primary_key, auto_increment = false)]
    pub organisation_id: PalformDatabaseID<IDOrganisation>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
