//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use super::sea_orm_active_enums::FormBrandingBorderIntensityEnum;
use super::sea_orm_active_enums::FormBrandingBorderRoundingEnum;
use super::sea_orm_active_enums::FormBrandingFontSizeEnum;
use super::sea_orm_active_enums::FormBrandingSpacingEnum;
use palform_tsid::resources::IDFormBranding;
use palform_tsid::resources::IDTeamAsset;
use palform_tsid::tsid::PalformDatabaseID;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "form_branding")]
pub struct Model {
    pub name: String,
    pub google_font: String,
    pub primary_color: String,
    pub border_rounding: FormBrandingBorderRoundingEnum,
    pub font_size: FormBrandingFontSizeEnum,
    pub spacing: FormBrandingSpacingEnum,
    pub include_palform_attribution: bool,
    pub terms_link: Option<String>,
    pub privacy_link: Option<String>,
    pub extra_footer_message: Option<String>,
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: PalformDatabaseID<IDFormBranding>,
    pub background_image_asset_id: Option<PalformDatabaseID<IDTeamAsset>>,
    pub logo_asset_id: Option<PalformDatabaseID<IDTeamAsset>>,
    pub accent_color: Option<String>,
    pub border_intensity: FormBrandingBorderIntensityEnum,
    pub border_shadow_intensity: FormBrandingBorderIntensityEnum,
    pub e2ee_badge: bool,
    pub background_color: Option<String>,
    pub background_color_accent: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::form::Entity")]
    Form,
    #[sea_orm(has_many = "super::form_branding_team_access::Entity")]
    FormBrandingTeamAccess,
    #[sea_orm(
        belongs_to = "super::team_asset::Entity",
        from = "Column::BackgroundImageAssetId",
        to = "super::team_asset::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    TeamAsset2,
    #[sea_orm(
        belongs_to = "super::team_asset::Entity",
        from = "Column::LogoAssetId",
        to = "super::team_asset::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    TeamAsset1,
}

impl Related<super::form::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Form.def()
    }
}

impl Related<super::form_branding_team_access::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::FormBrandingTeamAccess.def()
    }
}

impl Related<super::team::Entity> for Entity {
    fn to() -> RelationDef {
        super::form_branding_team_access::Relation::Team.def()
    }
    fn via() -> Option<RelationDef> {
        Some(
            super::form_branding_team_access::Relation::FormBranding
                .def()
                .rev(),
        )
    }
}

impl ActiveModelBehavior for ActiveModel {}
