//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use palform_tsid::{
    resources::{IDQuestion, IDQuestionGroup},
    tsid::PalformDatabaseID,
};
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "question")]
pub struct Model {
    pub title: String,
    pub description: Option<String>,
    #[sea_orm(column_type = "JsonBinary")]
    pub configuration: Json,
    pub position: i32,
    pub required: bool,
    pub internal_name: Option<String>,
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: PalformDatabaseID<IDQuestion>,
    pub group_id: PalformDatabaseID<IDQuestionGroup>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::question_group::Entity",
        from = "Column::GroupId",
        to = "super::question_group::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    QuestionGroup,
}

impl Related<super::question_group::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::QuestionGroup.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
